#!/bin/bash -e

# Control a lisp image started via detachtty.
# Usage: start-stop-lisp-daemon image-name (start|stop|attach|swank|kill)

# Originally ucwctl by Marco Baringer <mb@bese.it>.
# Modified by Andreas Fuchs <asf@boinkor.net>.

PROGNAME=$1 ; shift

DETACHTTY=/git/start-stop-lisp-daemon/detachtty/detachtty
ATTACHTTY=/git/start-stop-lisp-daemon/detachtty/attachtty
LISP=`which sbcl`
# load all the environment variables defined in the server description
source /etc/lisp-start.d/$PROGNAME

SOCKET_FILE=$VARROOT/$PROGNAME.socket
AS_USER="sudo -u $RUN_AS"

# set user-dependant environment variables
export HOME=/home/$RUN_AS/

USER=`whoami`

case $USER in
	'root') exec su $RUN_AS -c "$0 '$PROGNAME' $@" 
        ;;
	"$RUN_AS") 
        ;;
	*) echo "Can run this only as $RUN_AS or superuser. exiting..."
	   exit 1
	;;
esac

case "$1" in
    'start')
	# start up detachtty with our running lisp
        mkdir -p $VARROOT
        mkdir -p $LOGROOT
	touch $LOGROOT/$PROGNAME.dribble $LOGROOT/$PROGNAME.detachtty
	chown $RUN_AS $LOGROOT $VARROOT
	chown $RUN_AS $LOGROOT/$PROGNAME.dribble $LOGROOT/$PROGNAME.detachtty
	export HOME=/home/$RUN_AS/
        start-stop-daemon --quiet -d $ABROOT --pidfile $VARROOT/$PROGNAME.pid --exec $DETACHTTY -u $RUN_AS --start \
         -- --dribble-file $LOGROOT/$PROGNAME.dribble \
                  --log-file     $LOGROOT/$PROGNAME.detachtty \
                  --pid-file     $VARROOT/$PROGNAME.pid \
                  $SOCKET_FILE \
                  $LISP --eval '(let ((*debug-io* (make-broadcast-stream))) (cl:require :swank) (funcall (intern "CREATE-SERVER" :swank) :dont-close t :port '"$SWANKPORT))"

	$AS_USER $ATTACHTTY $SOCKET_FILE "$LISP_START_EXPRESSION" 2>/dev/null >/dev/null 
        
	# start the instance of screen
	$AS_USER screen -d -m -S $PROGNAME -t "emacs" -s "/bin/bash"
	$AS_USER screen -r $PROGNAME -p "emacs" -X chdir $ABROOT # for future windows
	$AS_USER screen -r $PROGNAME -p "emacs" -X stuff \
	    "cd $ABROOT"$'\n'

	# now launch emacs in the screen session and attach to the new swank
	$AS_USER screen -r $PROGNAME -p "emacs" -X stuff \
	    "emacs -nw -eval \"(progn (sleep-for 5) (slime-connect \\\"127.0.0.1\\\" $SWANKPORT))\""$'\n'

    ;;
    'stop')
        $AS_USER $ATTACHTTY $SOCKET_FILE \
            "$LISP_QUIT_EXPRESSION" 2>/dev/null >/dev/null || \
            rm -f $SOCKET_FILE 2>/dev/null
        start-stop-daemon --quiet --pidfile $VARROOT/$PROGNAME.pid --startas detachtty -u $RUN_AS --signal 3 --stop
    ;;
    'kill')
        kill `cat $VARROOT/$PROGNAME.pid`
        rm $SOCKET_FILE
    ;;
    'emacs')
        emacs -nw -eval "(slime-connect \"127.0.0.1\" $SWANKPORT)"
    ;;
    'attach')
        [ -e $SOCKET_FILE ] && tail -30 $LOGROOT/$PROGNAME.dribble
        $AS_USER $ATTACHTTY $SOCKET_FILE
    ;;  
  *)
        echo "Usage: $0 lisp-image-name (start|stop|attach|emacs|kill)"
esac

echo -n " $PROGNAME"
exit 0
